<Activity mc:Ignorable="sap sap2010" x:Class="RAPPROCHEMENT" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:bem="clr-namespace:BalaReva.EasyExcel.Main;assembly=BalaReva.EasyExcel" xmlns:bes="clr-namespace:BalaReva.EasyExcel.Sheets;assembly=BalaReva.EasyExcel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BKB_DATA" Type="InArgument(sd:DataTable)" />
    <x:Property Name="MCL_CLIENTS" Type="InArgument(sd:DataTable)" />
    <x:Property Name="MCL_CONTREPARTIES" Type="InArgument(sd:DataTable)" />
    <x:Property Name="date_arret" Type="InArgument(x:String)" />
    <x:Property Name="BASE_URL" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>812,3597</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>BalaReva.EasyExcel.Main</x:String>
      <x:String>BalaReva.EasyExcel.Utilities</x:String>
      <x:String>BalaReva.EasyExcel.Base</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
      <x:String>BalaReva.EasyExcel.Sheets</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>BalaReva.EasyExcel</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel.Utilities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.Office.Interop.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Private: RAPPROCHEMENT" sap:VirtualizedContainerService.HintSize="688,3532" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="result" />
      <Variable x:TypeArguments="sd:DataTable" Name="jointure" />
      <Variable x:TypeArguments="sd:DataRow" Name="newRow" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="626,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;codeMCL&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;abrege&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;clientsNTS&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;clientsMCL&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;clientsECART&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;contrepartiesNTS&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;contrepartiesMCL&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;contrepartiesECART&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <ui:BuildDataTable.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" DisplayName="Private: CSharpReference&lt;DataTable&gt;" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">result</mca:CSharpReference>
        </OutArgument>
      </ui:BuildDataTable.DataTable>
    </ui:BuildDataTable>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="626,1971" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Corps" sap:VirtualizedContainerService.HintSize="558,1854" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="MCL_Val" />
              <Variable x:TypeArguments="x:Int32" Name="MCL_VAL_PR" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Create New Row" sap:VirtualizedContainerService.HintSize="496,82" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataRow">
                  <mca:CSharpReference x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">newRow</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataRow">
                  <mca:CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">result.NewRow()</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Code Maroclear" sap:VirtualizedContainerService.HintSize="496,82" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">
                  <mca:CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">newRow["codeMCL"]</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">
                  <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">row["codeMcl"]</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Abrege" sap:VirtualizedContainerService.HintSize="496,82" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">
                  <mca:CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">newRow["abrege"]</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">
                  <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">row["abrege"]</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Sequence DisplayName="Avoir Client" sap:VirtualizedContainerService.HintSize="496,771" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="NTS Avoir" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">
                    <mca:CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">newRow["clientsNTS"]</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91" xml:space="preserve">row["soldeC"].ToString().Length.ToString() == "0" ?
"0": row["soldeC"].ToString()</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <ui:LookupDataTable CellValue="{x:Null}" LookupColumnName="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="434,292" sap2010:WorkflowViewState.IdRef="LookupDataTable_1">
                <ui:LookupDataTable.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">MCL_CLIENTS</mca:CSharpValue>
                  </InArgument>
                </ui:LookupDataTable.DataTable>
                <ui:LookupDataTable.LookupColumnIndex>
                  <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                    <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                  </InArgument>
                </ui:LookupDataTable.LookupColumnIndex>
                <ui:LookupDataTable.LookupValue>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">row["codeMcl"].ToString()</mca:CSharpValue>
                  </InArgument>
                </ui:LookupDataTable.LookupValue>
                <ui:LookupDataTable.RowIndex>
                  <OutArgument x:TypeArguments="x:Int32">
                    <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">MCL_Val</mca:CSharpReference>
                  </OutArgument>
                </ui:LookupDataTable.RowIndex>
                <ui:LookupDataTable.TargetColumnIndex>
                  <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                    <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="3" />
                  </InArgument>
                </ui:LookupDataTable.TargetColumnIndex>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LookupDataTable>
              <Assign DisplayName="MCL Avoir" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">
                    <mca:CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">newRow["clientsMCL"]</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">
                    <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">MCL_Val &gt;= Convert.ToInt32("0") ? MCL_CLIENTS.Rows[MCL_Val]["Solde"] : "0"</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="ECART" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">
                    <mca:CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">newRow["clientsECART"]</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">
                    <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92" xml:space="preserve">(
	Convert.ToDecimal(newRow["clientsNTS"] ) 
	-
	Convert.ToDecimal(newRow["clientsMCL"])
).ToString()</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <Sequence DisplayName="Avoir Propre" sap:VirtualizedContainerService.HintSize="496,504" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="NTS Propre" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">
                    <mca:CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">newRow["contrepartiesNTS"]</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">
                    <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93" xml:space="preserve">row["soldeP"].ToString().Length.ToString() == "0" ?
"0": row["soldeP"].ToString()</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <ui:LookupDataTable CellValue="{x:Null}" LookupColumnName="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="LookupDataTable_2">
                <ui:LookupDataTable.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">MCL_CONTREPARTIES</mca:CSharpValue>
                  </InArgument>
                </ui:LookupDataTable.DataTable>
                <ui:LookupDataTable.LookupColumnIndex>
                  <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                    <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                  </InArgument>
                </ui:LookupDataTable.LookupColumnIndex>
                <ui:LookupDataTable.LookupValue>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">row["codeMcl"].ToString()</mca:CSharpValue>
                  </InArgument>
                </ui:LookupDataTable.LookupValue>
                <ui:LookupDataTable.RowIndex>
                  <OutArgument x:TypeArguments="x:Int32">
                    <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">MCL_VAL_PR</mca:CSharpReference>
                  </OutArgument>
                </ui:LookupDataTable.RowIndex>
                <ui:LookupDataTable.TargetColumnIndex>
                  <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                    <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="3" />
                  </InArgument>
                </ui:LookupDataTable.TargetColumnIndex>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LookupDataTable>
              <Assign DisplayName="MCL PROPRE" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">
                    <mca:CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">newRow["contrepartiesMCL"]</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">
                    <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">MCL_VAL_PR &gt;= Convert.ToInt32("0") ? MCL_CONTREPARTIES.Rows[MCL_VAL_PR]["Solde"] : "0"</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="ECART" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">
                    <mca:CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">newRow["contrepartiesECART"]</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">
                    <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88" xml:space="preserve">(
	Convert.ToDecimal(newRow["contrepartiesNTS"])
	-
	Convert.ToDecimal(newRow["contrepartiesMCL"])
).ToString()</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <ui:AddDataRow ArrayRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="496,25" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
              <ui:AddDataRow.DataRow>
                <InArgument x:TypeArguments="sd:DataRow">
                  <mca:CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">newRow</mca:CSharpValue>
                </InArgument>
              </ui:AddDataRow.DataRow>
              <ui:AddDataRow.DataTable>
                <InOutArgument x:TypeArguments="sd:DataTable">
                  <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">result</mca:CSharpReference>
                </InOutArgument>
              </ui:AddDataRow.DataTable>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:AddDataRow>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <ui:ForEachRow.DataTable>
        <InArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">BKB_DATA</mca:CSharpValue>
        </InArgument>
      </ui:ForEachRow.DataTable>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="626,1104" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="592,1017" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="530,909" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Faire" sap:VirtualizedContainerService.HintSize="496,642" sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:WriteCellX DisplayName="UPDATE TITLE" sap:VirtualizedContainerService.HintSize="434,158" sap2010:WorkflowViewState.IdRef="WriteCellX_1">
                      <ueab:WriteCellX.Cell>
                        <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                          <mca:CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">Excel.Sheet["Feuil1"].Cell["B2"]</mca:CSharpValue>
                        </InArgument>
                      </ueab:WriteCellX.Cell>
                      <ueab:WriteCellX.Value>
                        <InArgument x:TypeArguments="x:Object">
                          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">"Rapprochement RSM du "+date_arret.Replace("/","-")</mca:CSharpValue>
                        </InArgument>
                      </ueab:WriteCellX.Value>
                    </ueab:WriteCellX>
                    <ueab:DeleteRowsX DeleteRowsOption="Specific" DisplayName="CLEAR PREVIOUS DATA" HasHeaders="False" sap:VirtualizedContainerService.HintSize="434,138" sap2010:WorkflowViewState.IdRef="DeleteRowsX_1">
                      <ueab:DeleteRowsX.Range>
                        <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                          <mca:CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" DisplayName="Private: CSharpValue&lt;IReadWriteRangeRef&gt;" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">Excel.Sheet["Feuil1"]</mca:CSharpValue>
                        </InArgument>
                      </ueab:DeleteRowsX.Range>
                      <ueab:DeleteRowsX.RowPositions>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" DisplayName="Private: CSharpValue&lt;String&gt;" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">"9-"+(BKB_DATA.Rows.Count+8).ToString()</mca:CSharpValue>
                        </InArgument>
                      </ueab:DeleteRowsX.RowPositions>
                    </ueab:DeleteRowsX>
                    <ueab:WriteRangeX DisplayName="Write TableDonnées to Excel" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="434,158" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False">
                      <ueab:WriteRangeX.Destination>
                        <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                          <mca:CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" DisplayName="Private: CSharpValue&lt;IReadWriteRangeRef&gt;" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">Excel.Sheet["Feuil1"].Range["B9"]</mca:CSharpValue>
                        </InArgument>
                      </ueab:WriteRangeX.Destination>
                      <ueab:WriteRangeX.Source>
                        <InArgument x:TypeArguments="sd:DataTable">
                          <mca:CSharpValue x:TypeArguments="sd:DataTable" DisplayName="Private: CSharpValue&lt;DataTable&gt;" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">result</mca:CSharpValue>
                        </InArgument>
                      </ueab:WriteRangeX.Source>
                    </ueab:WriteRangeX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelApplicationCard.WorkbookPath>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" DisplayName="Private: CSharpValue&lt;String&gt;" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">BASE_URL+"/Rapprochement NTS_MC.xlsx"</mca:CSharpValue>
                </InArgument>
              </ueab:ExcelApplicationCard.WorkbookPath>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
    <bem:ExcelScope FilePassword="{x:Null}" ModifyPassword="{x:Null}" DisplayAlerts="False" DisplayName="EXCEL STYLE" sap:VirtualizedContainerService.HintSize="626,166" sap2010:WorkflowViewState.IdRef="ExcelScope_1" MacroSettings="None" UpdateAutoLinks="Default" Visible="False">
      <bem:ExcelScope.Body>
        <ActivityAction x:TypeArguments="bem:ExcelParam">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="bem:ExcelParam" Name="WorkBookObj" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,22" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <bes:SetBorder ExecutionResult="{x:Null}" BorderWeight="3" ContinueOnError="False" Delay="3" DisplayName="B LEFT" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="SetBorder_2" LineStyle="xlContinuous" Presets="LeftBorder" SheetName="Feuil1">
              <bes:SetBorder.BorderColor>
                <InArgument x:TypeArguments="sd1:Color">
                  <mca:CSharpValue x:TypeArguments="sd1:Color" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">Color.Black</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.BorderColor>
              <bes:SetBorder.CellRange>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">"B9:B"+(BKB_DATA.Rows.Count+8).ToString()</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.CellRange>
            </bes:SetBorder>
            <bes:SetBorder ExecutionResult="{x:Null}" BorderWeight="1" ContinueOnError="False" Delay="3" DisplayName="B RIGHT" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="SetBorder_1" LineStyle="xlContinuous" Presets="RightBorder" SheetName="Feuil1">
              <bes:SetBorder.BorderColor>
                <InArgument x:TypeArguments="sd1:Color">
                  <mca:CSharpValue x:TypeArguments="sd1:Color" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">Color.Black</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.BorderColor>
              <bes:SetBorder.CellRange>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">"B9:B"+(BKB_DATA.Rows.Count+8).ToString()</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.CellRange>
            </bes:SetBorder>
            <bes:SetBorder ExecutionResult="{x:Null}" BorderWeight="3" ContinueOnError="False" Delay="3" DisplayName="C RIGHT" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="SetBorder_3" LineStyle="xlContinuous" Presets="RightBorder" SheetName="Sheet1">
              <bes:SetBorder.BorderColor>
                <InArgument x:TypeArguments="sd1:Color">
                  <mca:CSharpValue x:TypeArguments="sd1:Color" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">Color.Black</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.BorderColor>
              <bes:SetBorder.CellRange>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">"C9:C"+(BKB_DATA.Rows.Count+8).ToString()</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.CellRange>
            </bes:SetBorder>
            <bes:SetBorder ExecutionResult="{x:Null}" BorderWeight="1" ContinueOnError="False" Delay="3" DisplayName="D RIGHT" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="SetBorder_4" LineStyle="xlContinuous" Presets="RightBorder" SheetName="Sheet1">
              <bes:SetBorder.BorderColor>
                <InArgument x:TypeArguments="sd1:Color">
                  <mca:CSharpValue x:TypeArguments="sd1:Color" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">Color.Black</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.BorderColor>
              <bes:SetBorder.CellRange>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">"D9:D"+(BKB_DATA.Rows.Count+8).ToString()</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.CellRange>
            </bes:SetBorder>
            <bes:SetBorder ExecutionResult="{x:Null}" BorderWeight="1" ContinueOnError="False" Delay="3" DisplayName="E RIGHT" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="SetBorder_5" LineStyle="xlContinuous" Presets="RightBorder" SheetName="Sheet1">
              <bes:SetBorder.BorderColor>
                <InArgument x:TypeArguments="sd1:Color">
                  <mca:CSharpValue x:TypeArguments="sd1:Color" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">Color.Black</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.BorderColor>
              <bes:SetBorder.CellRange>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">"E9:E"+(BKB_DATA.Rows.Count+8).ToString()</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.CellRange>
            </bes:SetBorder>
            <bes:SetBorder ExecutionResult="{x:Null}" BorderWeight="3" ContinueOnError="False" Delay="3" DisplayName="F RIGHT" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="SetBorder_6" LineStyle="xlContinuous" Presets="RightBorder" SheetName="Sheet1">
              <bes:SetBorder.BorderColor>
                <InArgument x:TypeArguments="sd1:Color">
                  <mca:CSharpValue x:TypeArguments="sd1:Color" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">Color.Black</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.BorderColor>
              <bes:SetBorder.CellRange>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">"F9:F"+(BKB_DATA.Rows.Count+8).ToString()</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.CellRange>
            </bes:SetBorder>
            <bes:SetBorder ExecutionResult="{x:Null}" BorderWeight="1" ContinueOnError="False" Delay="3" DisplayName="G RIGHT" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="SetBorder_7" LineStyle="xlContinuous" Presets="RightBorder" SheetName="Sheet1">
              <bes:SetBorder.BorderColor>
                <InArgument x:TypeArguments="sd1:Color">
                  <mca:CSharpValue x:TypeArguments="sd1:Color" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">Color.Black</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.BorderColor>
              <bes:SetBorder.CellRange>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">"G9:G"+(BKB_DATA.Rows.Count+8).ToString()</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.CellRange>
            </bes:SetBorder>
            <bes:SetBorder ExecutionResult="{x:Null}" BorderWeight="1" ContinueOnError="False" Delay="3" DisplayName="H RIGHT" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="SetBorder_8" LineStyle="xlContinuous" Presets="RightBorder" SheetName="Sheet1">
              <bes:SetBorder.BorderColor>
                <InArgument x:TypeArguments="sd1:Color">
                  <mca:CSharpValue x:TypeArguments="sd1:Color" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">Color.Black</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.BorderColor>
              <bes:SetBorder.CellRange>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">"H9:H"+(BKB_DATA.Rows.Count+8).ToString()</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.CellRange>
            </bes:SetBorder>
            <bes:SetBorder ExecutionResult="{x:Null}" BorderWeight="3" ContinueOnError="False" Delay="3" DisplayName="I RIGHT" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="SetBorder_9" LineStyle="xlContinuous" Presets="RightBorder" SheetName="Sheet1">
              <bes:SetBorder.BorderColor>
                <InArgument x:TypeArguments="sd1:Color">
                  <mca:CSharpValue x:TypeArguments="sd1:Color" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">Color.Black</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.BorderColor>
              <bes:SetBorder.CellRange>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">"I9:I"+(BKB_DATA.Rows.Count+8).ToString()</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.CellRange>
            </bes:SetBorder>
            <bes:SetBorder ExecutionResult="{x:Null}" BorderWeight="3" ContinueOnError="False" Delay="3" DisplayName="BOTTOM" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="SetBorder_10" LineStyle="xlContinuous" Presets="BottomBorder" SheetName="Sheet1">
              <bes:SetBorder.BorderColor>
                <InArgument x:TypeArguments="sd1:Color">
                  <mca:CSharpValue x:TypeArguments="sd1:Color" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">Color.Black</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.BorderColor>
              <bes:SetBorder.CellRange>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">"B"+(BKB_DATA.Rows.Count+8).ToString()+":I"+(BKB_DATA.Rows.Count+8).ToString()</mca:CSharpValue>
                </InArgument>
              </bes:SetBorder.CellRange>
            </bes:SetBorder>
          </Sequence>
        </ActivityAction>
      </bem:ExcelScope.Body>
      <bem:ExcelScope.FilePath>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">BASE_URL+"/Rapprochement NTS_MC.xlsx"</mca:CSharpValue>
        </InArgument>
      </bem:ExcelScope.FilePath>
    </bem:ExcelScope>
  </Sequence>
</Activity>